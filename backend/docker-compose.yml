version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: team_ai_postgres
    environment:
      POSTGRES_USER: team_ai_user
      POSTGRES_PASSWORD: team_ai_password
      POSTGRES_DB: team_ai_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U team_ai_user -d team_ai_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (optional for caching)
  redis:
    image: redis:7-alpine
    container_name: team_ai_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build: .
    container_name: team_ai_backend
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - DATABASE_URL=postgresql+asyncpg://team_ai_user:team_ai_password@postgres:5432/team_ai_db
      - JWT_SECRET_KEY=your-secret-key-change-this-in-production
      - JWT_ALGORITHM=HS256
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
      - POSTGRES_SERVER=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=team_ai_user
      - POSTGRES_PASSWORD=team_ai_password
      - POSTGRES_DB=team_ai_db
      - REDIS_URL=redis://redis:6379
      # Supabase Configuration (optional - add your keys)
      # - SUPABASE_URL=https://your-project-ref.supabase.co
      # - SUPABASE_ANON_KEY=your-anon-key-here
      # - SUPABASE_SERVICE_KEY=your-service-role-key-here
      # - USE_SUPABASE_AUTH=false
    volumes:
      - .:/app
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
  redis_data:
